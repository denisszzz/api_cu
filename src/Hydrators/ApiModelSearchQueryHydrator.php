<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Hydrator\HydratorException;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class ApiModelSearchQueryHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate(object $document, array $data, array $hints = array()): array
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['id']['type'];
                $return = $value instanceof \MongoDB\BSON\ObjectId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['query']) || (! empty($this->class->fieldMappings['query']['nullable']) && array_key_exists('query', $data))) {
            $value = $data['query'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['query']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['query']->setValue($document, $return);
            $hydratedData['query'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['total']) || (! empty($this->class->fieldMappings['total']['nullable']) && array_key_exists('total', $data))) {
            $value = $data['total'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['total']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['total']->setValue($document, $return);
            $hydratedData['total'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['user_id']) || (! empty($this->class->fieldMappings['user_id']['nullable']) && array_key_exists('user_id', $data))) {
            $value = $data['user_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['user_id']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['user_id']->setValue($document, $return);
            $hydratedData['user_id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['sid']) || (! empty($this->class->fieldMappings['sid']['nullable']) && array_key_exists('sid', $data))) {
            $value = $data['sid'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['sid']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['sid']->setValue($document, $return);
            $hydratedData['sid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['timestamp']) || (! empty($this->class->fieldMappings['timestamp']['nullable']) && array_key_exists('timestamp', $data))) {
            $value = $data['timestamp'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['timestamp']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['timestamp']->setValue($document, $return);
            $hydratedData['timestamp'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['clicks']) || (! empty($this->class->fieldMappings['clicks']['nullable']) && array_key_exists('clicks', $data))) {
            $value = $data['clicks'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['clicks']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['clicks']->setValue($document, $return);
            $hydratedData['clicks'] = $return;
        }
        return $hydratedData;
    }
}