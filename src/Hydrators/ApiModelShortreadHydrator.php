<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Hydrator\HydratorException;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class ApiModelShortreadHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate(object $document, array $data, array $hints = array()): array
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['id']['type'];
                $return = $value instanceof \MongoDB\BSON\ObjectId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['title']) || (! empty($this->class->fieldMappings['title']['nullable']) && array_key_exists('title', $data))) {
            $value = $data['title'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['title']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['title']->setValue($document, $return);
            $hydratedData['title'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['title_slug']) || (! empty($this->class->fieldMappings['title_slug']['nullable']) && array_key_exists('title_slug', $data))) {
            $value = $data['title_slug'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['title_slug']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['title_slug']->setValue($document, $return);
            $hydratedData['title_slug'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['published']) || (! empty($this->class->fieldMappings['published']['nullable']) && array_key_exists('published', $data))) {
            $value = $data['published'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['published']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['published']->setValue($document, $return);
            $hydratedData['published'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['body']) || (! empty($this->class->fieldMappings['body']['nullable']) && array_key_exists('body', $data))) {
            $value = $data['body'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['body']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['body']->setValue($document, $return);
            $hydratedData['body'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['sources']) || (! empty($this->class->fieldMappings['sources']['nullable']) && array_key_exists('sources', $data))) {
            $value = $data['sources'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['sources']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['sources']->setValue($document, $return);
            $hydratedData['sources'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['author_name']) || (! empty($this->class->fieldMappings['author_name']['nullable']) && array_key_exists('author_name', $data))) {
            $value = $data['author_name'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['author_name']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['author_name']->setValue($document, $return);
            $hydratedData['author_name'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['views']) || (! empty($this->class->fieldMappings['views']['nullable']) && array_key_exists('views', $data))) {
            $value = $data['views'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['views']['type'];
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['views']->setValue($document, $return);
            $hydratedData['views'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['views_min']) || (! empty($this->class->fieldMappings['views_min']['nullable']) && array_key_exists('views_min', $data))) {
            $value = $data['views_min'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['views_min']['type'];
                $return = (int) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['views_min']->setValue($document, $return);
            $hydratedData['views_min'] = $return;
        }

        /** @Field(type="bool") */
        if (isset($data['disableComments']) || (! empty($this->class->fieldMappings['disableComments']['nullable']) && array_key_exists('disableComments', $data))) {
            $value = $data['disableComments'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['disableComments']['type'];
                $return = (bool) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['disableComments']->setValue($document, $return);
            $hydratedData['disableComments'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['seo']) || (! empty($this->class->fieldMappings['seo']['nullable']) && array_key_exists('seo', $data))) {
            $value = $data['seo'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['seo']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['seo']->setValue($document, $return);
            $hydratedData['seo'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['disclaimer']) || (! empty($this->class->fieldMappings['disclaimer']['nullable']) && array_key_exists('disclaimer', $data))) {
            $value = $data['disclaimer'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['disclaimer']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['disclaimer']->setValue($document, $return);
            $hydratedData['disclaimer'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['cover']) || (! empty($this->class->fieldMappings['cover']['nullable']) && array_key_exists('cover', $data))) {
            $value = $data['cover'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['cover']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['cover']->setValue($document, $return);
            $hydratedData['cover'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['rubric']) || (! empty($this->class->fieldMappings['rubric']['nullable']) && array_key_exists('rubric', $data))) {
            $return = $data['rubric'];
            if ($return !== null) {
                if ($this->class->fieldMappings['rubric']['storeAs'] !== ClassMetadata::REFERENCE_STORE_AS_ID && ! is_array($return)) {
                    throw HydratorException::associationTypeMismatch('Api\Model\Shortread', 'rubric', 'array', gettype($return));
                }

                $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['rubric'], $return);
                $identifier = ClassMetadata::getReferenceId($return, $this->class->fieldMappings['rubric']['storeAs']);
                $targetMetadata = $this->dm->getClassMetadata($className);
                $id = $targetMetadata->getPHPIdentifierValue($identifier);
                $return = $this->dm->getReference($className, $id);
            }

            $this->class->reflFields['rubric']->setValue($document, $return);
            $hydratedData['rubric'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['tags']) || (! empty($this->class->fieldMappings['tags']['nullable']) && array_key_exists('tags', $data))) {
            $value = $data['tags'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['tags']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['tags']->setValue($document, $return);
            $hydratedData['tags'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['authors']) || (! empty($this->class->fieldMappings['authors']['nullable']) && array_key_exists('authors', $data))) {
            $value = $data['authors'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['authors']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['authors']->setValue($document, $return);
            $hydratedData['authors'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['rss']) || (! empty($this->class->fieldMappings['rss']['nullable']) && array_key_exists('rss', $data))) {
            $value = $data['rss'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['rss']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['rss']->setValue($document, $return);
            $hydratedData['rss'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['rssDzen']) || (! empty($this->class->fieldMappings['rssDzen']['nullable']) && array_key_exists('rssDzen', $data))) {
            $value = $data['rssDzen'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['rssDzen']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['rssDzen']->setValue($document, $return);
            $hydratedData['rssDzen'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['sections']) || (! empty($this->class->fieldMappings['sections']['nullable']) && array_key_exists('sections', $data))) {
            $value = $data['sections'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['sections']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['sections']->setValue($document, $return);
            $hydratedData['sections'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['author']) || (! empty($this->class->fieldMappings['author']['nullable']) && array_key_exists('author', $data))) {
            $value = $data['author'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['author']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['author']->setValue($document, $return);
            $hydratedData['author'] = $return;
        }
        return $hydratedData;
    }
}