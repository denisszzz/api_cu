<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Hydrator\HydratorException;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class ApiModelRubricHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate(object $document, array $data, array $hints = array()): array
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['id']['type'];
                $return = $value instanceof \MongoDB\BSON\ObjectId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['title']) || (! empty($this->class->fieldMappings['title']['nullable']) && array_key_exists('title', $data))) {
            $value = $data['title'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['title']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['title']->setValue($document, $return);
            $hydratedData['title'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['seo']) || (! empty($this->class->fieldMappings['seo']['nullable']) && array_key_exists('seo', $data))) {
            $value = $data['seo'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['seo']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['seo']->setValue($document, $return);
            $hydratedData['seo'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['title_slug']) || (! empty($this->class->fieldMappings['title_slug']['nullable']) && array_key_exists('title_slug', $data))) {
            $value = $data['title_slug'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['title_slug']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['title_slug']->setValue($document, $return);
            $hydratedData['title_slug'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['menu']) || (! empty($this->class->fieldMappings['menu']['nullable']) && array_key_exists('menu', $data))) {
            $value = $data['menu'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['menu']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['menu']->setValue($document, $return);
            $hydratedData['menu'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['sections']) || (! empty($this->class->fieldMappings['sections']['nullable']) && array_key_exists('sections', $data))) {
            $value = $data['sections'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['sections']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['sections']->setValue($document, $return);
            $hydratedData['sections'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['formats']) || (! empty($this->class->fieldMappings['formats']['nullable']) && array_key_exists('formats', $data))) {
            $value = $data['formats'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['formats']['type'];
                $return = $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['formats']->setValue($document, $return);
            $hydratedData['formats'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['theme']) || (! empty($this->class->fieldMappings['theme']['nullable']) && array_key_exists('theme', $data))) {
            $value = $data['theme'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['theme']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['theme']->setValue($document, $return);
            $hydratedData['theme'] = $return;
        }

        /** @Field(type="bool") */
        if (isset($data['vbros']) || (! empty($this->class->fieldMappings['vbros']['nullable']) && array_key_exists('vbros', $data))) {
            $value = $data['vbros'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['vbros']['type'];
                $return = (bool) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['vbros']->setValue($document, $return);
            $hydratedData['vbros'] = $return;
        }
        return $hydratedData;
    }
}